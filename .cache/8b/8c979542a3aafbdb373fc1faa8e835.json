{"id":"scenes/Rules.js","dependencies":[{"name":"C:\\Users\\grifo\\Desktop\\OregonTrail\\package.json","includedInParent":true,"mtime":1650419698448},{"name":"phaser","loc":{"line":1,"column":19,"index":19},"parent":"C:\\Users\\grifo\\Desktop\\OregonTrail\\src\\scenes\\Rules.js","resolved":"C:\\Users\\grifo\\Desktop\\OregonTrail\\node_modules\\phaser\\dist\\phaser.js"},{"name":"../consts/Fonts","loc":{"line":2,"column":20,"index":49},"parent":"C:\\Users\\grifo\\Desktop\\OregonTrail\\src\\scenes\\Rules.js","resolved":"C:\\Users\\grifo\\Desktop\\OregonTrail\\src\\consts\\Fonts.js"},{"name":"../consts/SceneKeys","loc":{"line":3,"column":28,"index":96},"parent":"C:\\Users\\grifo\\Desktop\\OregonTrail\\src\\scenes\\Rules.js","resolved":"C:\\Users\\grifo\\Desktop\\OregonTrail\\src\\consts\\SceneKeys.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _phaser = _interopRequireDefault(require(\"phaser\"));\n\nvar _Fonts = require(\"../consts/Fonts\");\n\nvar _SceneKeys = require(\"../consts/SceneKeys\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n//import { GameBackground, GameOver } from '../consts/SceneKeys'\nvar Rules = /*#__PURE__*/function (_Phaser$Scene) {\n  _inherits(Rules, _Phaser$Scene);\n\n  var _super = _createSuper(Rules);\n\n  function Rules() {\n    _classCallCheck(this, Rules);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Rules, [{\n    key: \"preload\",\n    value: function preload() {}\n  }, {\n    key: \"create\",\n    value: function create() {\n      var _this = this;\n\n      this.add.text(5, 5, \"You're a settler attempting to reach Oregon, designated by a green tile. On your journey, you will have the choice to jump to any adjacent tile, or make the leap into the unknown to travel a tile further by holding shift. The trail is an arduous one, and resources are expended quite quickly! In fact, each movement costs supplies equal to the amount of settlers on your wagon. If you run out of supplies, though, your settlers will instead die off one by one each round. On your journey, you may come across three encounters: the base encounter, denoted by a gray tile, in which both fortune and failure shall meet you; the bad luck encounter, denoted by a red tile, in which disaster is immediate; and the shop tile, denoted by a yellow tile, in which you must either trade one crewmember for three supplies or four supplies for one item. You may also run into inhabitable terrain, marked by a black tile. You can't land on it, but you can jump past it. Good Luck!\", {\n        fontFamily: _Fonts.Rye,\n        fontSize: 28,\n        wordWrap: {\n          width: 890\n        }\n      });\n      this.add.text(713, 583, '<Return>', {\n        fontFamily: _Fonts.Rye,\n        fontSize: 39,\n        color: '#FF0000'\n      }).setInteractive().on(_phaser.default.Input.Events.GAMEOBJECT_POINTER_DOWN, function () {\n        setTimeout(function () {\n          _this.scene.start(_SceneKeys.TitleScreen);\n        }, 350);\n      });\n    }\n  }]);\n\n  return Rules;\n}(_phaser.default.Scene);\n\nexports.default = Rules;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"scenes/Rules.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"scenes/Rules.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"scenes/Rules.js","original":{"line":3,"column":0}},{"generated":{"line":38,"column":0},"source":"scenes/Rules.js","original":{"line":5,"column":0}},{"name":"Rules","generated":{"line":39,"column":4},"source":"scenes/Rules.js","original":{"line":7,"column":21}},{"generated":{"line":52,"column":11},"source":"scenes/Rules.js","original":{"line":10,"column":4}},{"generated":{"line":52,"column":30},"source":"scenes/Rules.js","original":{"line":11,"column":4}},{"generated":{"line":52,"column":31},"source":"scenes/Rules.js","original":{"line":13,"column":5}},{"generated":{"line":55,"column":11},"source":"scenes/Rules.js","original":{"line":15,"column":4}},{"generated":{"line":55,"column":29},"source":"scenes/Rules.js","original":{"line":16,"column":4}},{"generated":{"line":56,"column":0},"source":"scenes/Rules.js","original":{"line":16,"column":4}},{"generated":{"line":58,"column":0},"source":"scenes/Rules.js","original":{"line":17,"column":8}},{"name":"add","generated":{"line":58,"column":11},"source":"scenes/Rules.js","original":{"line":17,"column":13}},{"generated":{"line":58,"column":14},"source":"scenes/Rules.js","original":{"line":17,"column":8}},{"name":"text","generated":{"line":58,"column":15},"source":"scenes/Rules.js","original":{"line":17,"column":17}},{"generated":{"line":58,"column":19},"source":"scenes/Rules.js","original":{"line":17,"column":8}},{"generated":{"line":58,"column":20},"source":"scenes/Rules.js","original":{"line":17,"column":22}},{"generated":{"line":58,"column":21},"source":"scenes/Rules.js","original":{"line":17,"column":8}},{"generated":{"line":58,"column":23},"source":"scenes/Rules.js","original":{"line":17,"column":25}},{"generated":{"line":58,"column":24},"source":"scenes/Rules.js","original":{"line":17,"column":8}},{"generated":{"line":58,"column":26},"source":"scenes/Rules.js","original":{"line":17,"column":28}},{"generated":{"line":58,"column":994},"source":"scenes/Rules.js","original":{"line":17,"column":8}},{"generated":{"line":58,"column":996},"source":"scenes/Rules.js","original":{"line":17,"column":998}},{"name":"fontFamily","generated":{"line":59,"column":0},"source":"scenes/Rules.js","original":{"line":18,"column":12}},{"name":"fontFamily","generated":{"line":59,"column":8},"source":"scenes/Rules.js","original":{"line":18,"column":12}},{"generated":{"line":59,"column":18},"source":"scenes/Rules.js","original":{"line":18,"column":22}},{"name":"Rye","generated":{"line":59,"column":20},"source":"scenes/Rules.js","original":{"line":18,"column":24}},{"generated":{"line":59,"column":30},"source":"scenes/Rules.js","original":{"line":17,"column":998}},{"name":"fontSize","generated":{"line":60,"column":0},"source":"scenes/Rules.js","original":{"line":19,"column":12}},{"name":"fontSize","generated":{"line":60,"column":8},"source":"scenes/Rules.js","original":{"line":19,"column":12}},{"generated":{"line":60,"column":16},"source":"scenes/Rules.js","original":{"line":19,"column":20}},{"generated":{"line":60,"column":18},"source":"scenes/Rules.js","original":{"line":19,"column":22}},{"generated":{"line":60,"column":20},"source":"scenes/Rules.js","original":{"line":17,"column":998}},{"name":"wordWrap","generated":{"line":61,"column":0},"source":"scenes/Rules.js","original":{"line":20,"column":12}},{"name":"wordWrap","generated":{"line":61,"column":8},"source":"scenes/Rules.js","original":{"line":20,"column":12}},{"generated":{"line":61,"column":16},"source":"scenes/Rules.js","original":{"line":20,"column":20}},{"generated":{"line":61,"column":18},"source":"scenes/Rules.js","original":{"line":20,"column":22}},{"name":"width","generated":{"line":62,"column":0},"source":"scenes/Rules.js","original":{"line":20,"column":23}},{"name":"width","generated":{"line":62,"column":10},"source":"scenes/Rules.js","original":{"line":20,"column":23}},{"generated":{"line":62,"column":15},"source":"scenes/Rules.js","original":{"line":20,"column":28}},{"generated":{"line":62,"column":17},"source":"scenes/Rules.js","original":{"line":20,"column":30}},{"generated":{"line":63,"column":0},"source":"scenes/Rules.js","original":{"line":20,"column":22}},{"generated":{"line":64,"column":0},"source":"scenes/Rules.js","original":{"line":17,"column":998}},{"generated":{"line":64,"column":7},"source":"scenes/Rules.js","original":{"line":17,"column":8}},{"generated":{"line":65,"column":0},"source":"scenes/Rules.js","original":{"line":23,"column":8}},{"name":"add","generated":{"line":65,"column":11},"source":"scenes/Rules.js","original":{"line":23,"column":13}},{"generated":{"line":65,"column":14},"source":"scenes/Rules.js","original":{"line":23,"column":8}},{"name":"text","generated":{"line":65,"column":15},"source":"scenes/Rules.js","original":{"line":23,"column":17}},{"generated":{"line":65,"column":19},"source":"scenes/Rules.js","original":{"line":23,"column":8}},{"generated":{"line":65,"column":20},"source":"scenes/Rules.js","original":{"line":23,"column":22}},{"generated":{"line":65,"column":23},"source":"scenes/Rules.js","original":{"line":23,"column":8}},{"generated":{"line":65,"column":25},"source":"scenes/Rules.js","original":{"line":23,"column":27}},{"generated":{"line":65,"column":28},"source":"scenes/Rules.js","original":{"line":23,"column":8}},{"generated":{"line":65,"column":30},"source":"scenes/Rules.js","original":{"line":23,"column":32}},{"generated":{"line":65,"column":40},"source":"scenes/Rules.js","original":{"line":23,"column":8}},{"generated":{"line":65,"column":42},"source":"scenes/Rules.js","original":{"line":23,"column":44}},{"name":"fontFamily","generated":{"line":66,"column":0},"source":"scenes/Rules.js","original":{"line":24,"column":12}},{"name":"fontFamily","generated":{"line":66,"column":8},"source":"scenes/Rules.js","original":{"line":24,"column":12}},{"generated":{"line":66,"column":18},"source":"scenes/Rules.js","original":{"line":24,"column":22}},{"name":"Rye","generated":{"line":66,"column":20},"source":"scenes/Rules.js","original":{"line":24,"column":24}},{"generated":{"line":66,"column":30},"source":"scenes/Rules.js","original":{"line":23,"column":44}},{"name":"fontSize","generated":{"line":67,"column":0},"source":"scenes/Rules.js","original":{"line":25,"column":12}},{"name":"fontSize","generated":{"line":67,"column":8},"source":"scenes/Rules.js","original":{"line":25,"column":12}},{"generated":{"line":67,"column":16},"source":"scenes/Rules.js","original":{"line":25,"column":20}},{"generated":{"line":67,"column":18},"source":"scenes/Rules.js","original":{"line":25,"column":22}},{"generated":{"line":67,"column":20},"source":"scenes/Rules.js","original":{"line":23,"column":44}},{"name":"color","generated":{"line":68,"column":0},"source":"scenes/Rules.js","original":{"line":26,"column":12}},{"name":"color","generated":{"line":68,"column":8},"source":"scenes/Rules.js","original":{"line":26,"column":12}},{"generated":{"line":68,"column":13},"source":"scenes/Rules.js","original":{"line":26,"column":17}},{"generated":{"line":68,"column":15},"source":"scenes/Rules.js","original":{"line":26,"column":19}},{"generated":{"line":69,"column":0},"source":"scenes/Rules.js","original":{"line":23,"column":44}},{"generated":{"line":69,"column":7},"source":"scenes/Rules.js","original":{"line":23,"column":8}},{"name":"setInteractive","generated":{"line":69,"column":9},"source":"scenes/Rules.js","original":{"line":28,"column":9}},{"generated":{"line":69,"column":23},"source":"scenes/Rules.js","original":{"line":23,"column":8}},{"name":"on","generated":{"line":69,"column":26},"source":"scenes/Rules.js","original":{"line":29,"column":13}},{"generated":{"line":69,"column":28},"source":"scenes/Rules.js","original":{"line":23,"column":8}},{"name":"Phaser","generated":{"line":69,"column":29},"source":"scenes/Rules.js","original":{"line":29,"column":16}},{"name":"Input","generated":{"line":69,"column":45},"source":"scenes/Rules.js","original":{"line":29,"column":23}},{"generated":{"line":69,"column":50},"source":"scenes/Rules.js","original":{"line":29,"column":16}},{"name":"Events","generated":{"line":69,"column":51},"source":"scenes/Rules.js","original":{"line":29,"column":29}},{"generated":{"line":69,"column":57},"source":"scenes/Rules.js","original":{"line":29,"column":16}},{"name":"GAMEOBJECT_POINTER_DOWN","generated":{"line":69,"column":58},"source":"scenes/Rules.js","original":{"line":29,"column":36}},{"generated":{"line":69,"column":81},"source":"scenes/Rules.js","original":{"line":23,"column":8}},{"generated":{"line":69,"column":83},"source":"scenes/Rules.js","original":{"line":29,"column":61}},{"generated":{"line":69,"column":95},"source":"scenes/Rules.js","original":{"line":29,"column":67}},{"name":"setTimeout","generated":{"line":70,"column":0},"source":"scenes/Rules.js","original":{"line":31,"column":12}},{"name":"setTimeout","generated":{"line":70,"column":8},"source":"scenes/Rules.js","original":{"line":31,"column":12}},{"generated":{"line":70,"column":18},"source":"scenes/Rules.js","original":{"line":31,"column":22}},{"generated":{"line":70,"column":19},"source":"scenes/Rules.js","original":{"line":31,"column":23}},{"generated":{"line":70,"column":31},"source":"scenes/Rules.js","original":{"line":31,"column":29}},{"generated":{"line":71,"column":0},"source":"scenes/Rules.js","original":{"line":32,"column":16}},{"generated":{"line":71,"column":10},"source":"scenes/Rules.js","original":{"line":32,"column":16}},{"generated":{"line":71,"column":15},"source":"scenes/Rules.js","original":{"line":32,"column":20}},{"name":"scene","generated":{"line":71,"column":16},"source":"scenes/Rules.js","original":{"line":32,"column":21}},{"generated":{"line":71,"column":21},"source":"scenes/Rules.js","original":{"line":32,"column":16}},{"name":"start","generated":{"line":71,"column":22},"source":"scenes/Rules.js","original":{"line":32,"column":27}},{"generated":{"line":71,"column":27},"source":"scenes/Rules.js","original":{"line":32,"column":16}},{"name":"TitleScreen","generated":{"line":71,"column":28},"source":"scenes/Rules.js","original":{"line":32,"column":33}},{"generated":{"line":71,"column":50},"source":"scenes/Rules.js","original":{"line":32,"column":16}},{"generated":{"line":72,"column":0},"source":"scenes/Rules.js","original":{"line":32,"column":46}},{"generated":{"line":72,"column":9},"source":"scenes/Rules.js","original":{"line":31,"column":22}},{"generated":{"line":72,"column":11},"source":"scenes/Rules.js","original":{"line":32,"column":48}},{"generated":{"line":72,"column":14},"source":"scenes/Rules.js","original":{"line":31,"column":22}},{"generated":{"line":72,"column":15},"source":"scenes/Rules.js","original":{"line":31,"column":12}},{"generated":{"line":73,"column":0},"source":"scenes/Rules.js","original":{"line":33,"column":13}},{"generated":{"line":73,"column":7},"source":"scenes/Rules.js","original":{"line":23,"column":8}},{"generated":{"line":74,"column":0},"source":"scenes/Rules.js","original":{"line":34,"column":5}},{"name":"Phaser","generated":{"line":78,"column":2},"source":"scenes/Rules.js","original":{"line":7,"column":35}},{"name":"Scene","generated":{"line":78,"column":18},"source":"scenes/Rules.js","original":{"line":7,"column":42}}],"sources":{"scenes/Rules.js":"import Phaser from 'phaser'\r\nimport { Rye } from '../consts/Fonts'\r\nimport { TitleScreen } from '../consts/SceneKeys'\r\n\r\n//import { GameBackground, GameOver } from '../consts/SceneKeys'\r\n\r\nexport default class Rules extends Phaser.Scene\r\n{\r\n\r\n    preload()\r\n    {\r\n\r\n    }\r\n\r\n    create()\r\n    {\r\n        this.add.text(5, 5, \"You're a settler attempting to reach Oregon, designated by a green tile. On your journey, you will have the choice to jump to any adjacent tile, or make the leap into the unknown to travel a tile further by holding shift. The trail is an arduous one, and resources are expended quite quickly! In fact, each movement costs supplies equal to the amount of settlers on your wagon. If you run out of supplies, though, your settlers will instead die off one by one each round. On your journey, you may come across three encounters: the base encounter, denoted by a gray tile, in which both fortune and failure shall meet you; the bad luck encounter, denoted by a red tile, in which disaster is immediate; and the shop tile, denoted by a yellow tile, in which you must either trade one crewmember for three supplies or four supplies for one item. You may also run into inhabitable terrain, marked by a black tile. You can't land on it, but you can jump past it. Good Luck!\", {\r\n            fontFamily: Rye,\r\n            fontSize: 28,\r\n            wordWrap: {width: 890}\r\n        })\r\n        \r\n        this.add.text(713, 583, '<Return>', {\r\n            fontFamily: Rye,\r\n            fontSize: 39,\r\n            color: '#FF0000'\r\n        })\r\n        .setInteractive()\r\n            .on(Phaser.Input.Events.GAMEOBJECT_POINTER_DOWN, () => {\r\n\r\n            setTimeout(() => {\r\n                this.scene.start(TitleScreen)}, 350)\r\n            })\r\n    }\r\n}"},"lineCount":null}},"error":null,"hash":"a2cc9ad9df2223c031b684dc634085a6","cacheData":{"env":{}}}